package com.github.suninvr.virtualadditions.mixin;

import com.github.suninvr.virtualadditions.entity.LumwaspEntity;
import com.github.suninvr.virtualadditions.entity.LyftEntity;
import com.github.suninvr.virtualadditions.entity.SalineEntity;
import com.github.suninvr.virtualadditions.registry.VAEntityType;
import com.google.common.collect.ImmutableMap;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.LivingEntity;
import net.minecraft.entity.attribute.DefaultAttributeContainer;
import net.minecraft.entity.attribute.DefaultAttributeRegistry;
import org.spongepowered.asm.mixin.Final;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Mutable;
import org.spongepowered.asm.mixin.Shadow;

import java.util.Map;

@Mixin(DefaultAttributeRegistry.class)
public class DefaultAttributeRegistryMixin {
    @Shadow @Final @Mutable
    private static Map<EntityType<? extends LivingEntity>, DefaultAttributeContainer> DEFAULT_ATTRIBUTE_REGISTRY; //ImmutableMap.builder().put(EntityType.ALLAY, AllayEntity.createAllayAttributes().build()).put(EntityType.ARMADILLO, ArmadilloEntity.createArmadilloAttributes().build()).put(EntityType.ARMOR_STAND, ArmorStandEntity.createArmorStandAttributes().build()).put(EntityType.AXOLOTL, AxolotlEntity.createAxolotlAttributes().build()).put(EntityType.BAT, BatEntity.createBatAttributes().build()).put(EntityType.BEE, BeeEntity.createBeeAttributes().build()).put(EntityType.BLAZE, BlazeEntity.createBlazeAttributes().build()).put(EntityType.BOGGED, BoggedEntity.createBoggedAttributes().build()).put(EntityType.CAT, CatEntity.createCatAttributes().build()).put(EntityType.CAMEL, CamelEntity.createCamelAttributes().build()).put(EntityType.CAVE_SPIDER, CaveSpiderEntity.createCaveSpiderAttributes().build()).put(EntityType.CHICKEN, ChickenEntity.createChickenAttributes().build()).put(EntityType.COD, FishEntity.createFishAttributes().build()).put(EntityType.COW, CowEntity.createCowAttributes().build()).put(EntityType.CREEPER, CreeperEntity.createCreeperAttributes().build()).put(EntityType.DOLPHIN, DolphinEntity.createDolphinAttributes().build()).put(EntityType.DONKEY, AbstractDonkeyEntity.createAbstractDonkeyAttributes().build()).put(EntityType.DROWNED, DrownedEntity.createDrownedAttributes().build()).put(EntityType.ELDER_GUARDIAN, ElderGuardianEntity.createElderGuardianAttributes().build()).put(EntityType.ENDERMAN, EndermanEntity.createEndermanAttributes().build()).put(EntityType.ENDERMITE, EndermiteEntity.createEndermiteAttributes().build()).put(EntityType.ENDER_DRAGON, EnderDragonEntity.createEnderDragonAttributes().build()).put(EntityType.EVOKER, EvokerEntity.createEvokerAttributes().build()).put(EntityType.BREEZE, BreezeEntity.createBreezeAttributes().build()).put(EntityType.FOX, FoxEntity.createFoxAttributes().build()).put(EntityType.FROG, FrogEntity.createFrogAttributes().build()).put(EntityType.GHAST, GhastEntity.createGhastAttributes().build()).put(EntityType.GIANT, GiantEntity.createGiantAttributes().build()).put(EntityType.GLOW_SQUID, GlowSquidEntity.createSquidAttributes().build()).put(EntityType.GOAT, GoatEntity.createGoatAttributes().build()).put(EntityType.GUARDIAN, GuardianEntity.createGuardianAttributes().build()).put(EntityType.HOGLIN, HoglinEntity.createHoglinAttributes().build()).put(EntityType.HORSE, AbstractHorseEntity.createBaseHorseAttributes().build()).put(EntityType.HUSK, ZombieEntity.createZombieAttributes().build()).put(EntityType.ILLUSIONER, IllusionerEntity.createIllusionerAttributes().build()).put(EntityType.IRON_GOLEM, IronGolemEntity.createIronGolemAttributes().build()).put(EntityType.LLAMA, LlamaEntity.createLlamaAttributes().build()).put(EntityType.MAGMA_CUBE, MagmaCubeEntity.createMagmaCubeAttributes().build()).put(EntityType.MOOSHROOM, CowEntity.createCowAttributes().build()).put(EntityType.MULE, AbstractDonkeyEntity.createAbstractDonkeyAttributes().build()).put(EntityType.OCELOT, OcelotEntity.createOcelotAttributes().build()).put(EntityType.PANDA, PandaEntity.createPandaAttributes().build()).put(EntityType.PARROT, ParrotEntity.createParrotAttributes().build()).put(EntityType.PHANTOM, HostileEntity.createHostileAttributes().build()).put(EntityType.PIG, PigEntity.createPigAttributes().build()).put(EntityType.PIGLIN, PiglinEntity.createPiglinAttributes().build()).put(EntityType.PIGLIN_BRUTE, PiglinBruteEntity.createPiglinBruteAttributes().build()).put(EntityType.PILLAGER, PillagerEntity.createPillagerAttributes().build()).put(EntityType.PLAYER, PlayerEntity.createPlayerAttributes().build()).put(EntityType.POLAR_BEAR, PolarBearEntity.createPolarBearAttributes().build()).put(EntityType.PUFFERFISH, FishEntity.createFishAttributes().build()).put(EntityType.RABBIT, RabbitEntity.createRabbitAttributes().build()).put(EntityType.RAVAGER, RavagerEntity.createRavagerAttributes().build()).put(EntityType.SALMON, FishEntity.createFishAttributes().build()).put(EntityType.SHEEP, SheepEntity.createSheepAttributes().build()).put(EntityType.SHULKER, ShulkerEntity.createShulkerAttributes().build()).put(EntityType.SILVERFISH, SilverfishEntity.createSilverfishAttributes().build()).put(EntityType.SKELETON, AbstractSkeletonEntity.createAbstractSkeletonAttributes().build()).put(EntityType.SKELETON_HORSE, SkeletonHorseEntity.createSkeletonHorseAttributes().build()).put(EntityType.SLIME, HostileEntity.createHostileAttributes().build()).put(EntityType.SNIFFER, SnifferEntity.createSnifferAttributes().build()).put(EntityType.SNOW_GOLEM, SnowGolemEntity.createSnowGolemAttributes().build()).put(EntityType.SPIDER, SpiderEntity.createSpiderAttributes().build()).put(EntityType.SQUID, SquidEntity.createSquidAttributes().build()).put(EntityType.STRAY, AbstractSkeletonEntity.createAbstractSkeletonAttributes().build()).put(EntityType.STRIDER, StriderEntity.createStriderAttributes().build()).put(EntityType.TADPOLE, TadpoleEntity.createTadpoleAttributes().build()).put(EntityType.TRADER_LLAMA, LlamaEntity.createLlamaAttributes().build()).put(EntityType.TROPICAL_FISH, FishEntity.createFishAttributes().build()).put(EntityType.TURTLE, TurtleEntity.createTurtleAttributes().build()).put(EntityType.VEX, VexEntity.createVexAttributes().build()).put(EntityType.VILLAGER, VillagerEntity.createVillagerAttributes().build()).put(EntityType.VINDICATOR, VindicatorEntity.createVindicatorAttributes().build()).put(EntityType.WARDEN, WardenEntity.addAttributes().build()).put(EntityType.WANDERING_TRADER, MobEntity.createMobAttributes().build()).put(EntityType.WITCH, WitchEntity.createWitchAttributes().build()).put(EntityType.WITHER, WitherEntity.createWitherAttributes().build()).put(EntityType.WITHER_SKELETON, AbstractSkeletonEntity.createAbstractSkeletonAttributes().build()).put(EntityType.WOLF, WolfEntity.createWolfAttributes().build()).put(EntityType.ZOGLIN, ZoglinEntity.createZoglinAttributes().build()).put(EntityType.ZOMBIE, ZombieEntity.createZombieAttributes().build()).put(EntityType.ZOMBIE_HORSE, ZombieHorseEntity.createZombieHorseAttributes().build()).put(EntityType.ZOMBIE_VILLAGER, ZombieEntity.createZombieAttributes().build()).put(EntityType.ZOMBIFIED_PIGLIN, ZombifiedPiglinEntity.createZombifiedPiglinAttributes().build()).build();

    static {
        Map<EntityType<? extends LivingEntity>, DefaultAttributeContainer> newMap = new java.util.HashMap<>(Map.copyOf(DEFAULT_ATTRIBUTE_REGISTRY));
        newMap.putAll(VAEntityType.ENTITY_ATTRIBUTES);
        DEFAULT_ATTRIBUTE_REGISTRY = ImmutableMap.copyOf(newMap);
    }
}
